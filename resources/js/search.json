[[{"i":"welcome-to-frinx-documentation","l":"Welcome to FRINX Documentation!"},{"l":"FRINX Machine"},{"l":"FRINX UniConfig"},{"l":"FRINX UniFlow"},{"l":"FRINX UniResource"}],[{"l":"FRINX Machine introduction"},{"l":"FRINX Machine components"},{"l":"FRINX UniConfig"},{"i":"netflix-conductor-workflow-engine","l":"Netflix Conductor (workflow engine)"},{"i":"elasticsearch-inventory-and-logs","l":"Elasticsearch (inventory and logs)"},{"i":"uniconfig-ui-user-interface","l":"UniConfig UI (user interface)"},{"l":"High Level Architecture"},{"l":"Defining a workflow"},{"l":"Operating FRINX Machine"}],[{"l":"Demo Use Cases"},{"l":"Open FRINX UniConfig UI"}],[{"l":"Add a device to inventory and mount it"},{"l":"Create a new device in the inventory"},{"l":"Mount the new device from Inventory"},{"l":"Look at the details of the workflow"}],[{"l":"Creating a Layer 2 VPN Point-to-Point Connection"},{"l":"Navigating through UniFlow"},{"l":"Configuring the Workflow"},{"l":"Output of the Executed Workflow"},{"l":"Sub-Workflows"}],[{"l":"Creating loopback Address and Retrieving Journals of Devices"},{"l":"Create loopback Address on Devices Stored in the Inventory"},{"l":"Running the workflow for retrieving the journal of a device"}],[{"l":"Mount all devices in inventory"}],[{"l":"Mount Devices from UniConfig"},{"l":"Mount CLI Device"},{"l":"Mount NetConf Device"},{"l":"Unmount Device"}],[{"l":"Policy filter XR"},{"l":"Searching the workflow"},{"i":"sync--replace","l":"Sync & Replace"},{"l":"Read device data"},{"l":"jsonJQ filter"},{"l":"Lambda"},{"i":"write--commit","l":"Write & commit"},{"l":"Example input"},{"l":"Execution flow"},{"l":"Run of the workflow"}],[{"l":"FRINX UniConfig introduction"},{"l":"UniConfig key feature overview"},{"i":"uniconfig-enables-users-to-communicate-with-their-network-infrastructure-via-four-options","l":"UniConfig enables users to communicate with their network infrastructure via four options:"},{"l":"UniConfig in a Docker container"},{"l":"Download and activate FRINX UniConfig"},{"l":"Stop the container"},{"l":"UniConfig as a Java process in a VM or on a host"},{"l":"Download FRINX UniConfig"},{"l":"Activate FRINX UniConfig"},{"l":"Offline Activation"}],[{"l":"User Guide"},{"l":"Basic Concepts"},{"l":"Device Installation"},{"l":"UniConfig Operations"},{"l":"UniConfig Procedures"}],[{"l":"Basic Concepts"}],[{"l":"Device installation"},{"i":"device-installation-1","l":"Device installation"},{"l":"UniConfig CLI"},{"l":"UniConfig Netconf"},{"l":"UniConfig-native CLI"}],[{"l":"Device installation"},{"l":"Installing CLI device"},{"l":"Authentication parameters"},{"l":"Keepalive strategies"},{"l":"Journaling parameters"},{"l":"Parsing parameters"},{"l":"Tree-parser"},{"l":"Batch-parser"},{"l":"One-line-parser"},{"l":"Cisco IOX XR Example request"},{"l":"Junos Example request"},{"l":"Uninstalling CLI device"},{"l":"Example request"},{"l":"Installing Netconf device"},{"l":"Identification of remote device"},{"i":"authentication-parameters-1","l":"Authentication parameters"},{"l":"Session timers"},{"l":"Capabilities"},{"l":"UniConfig-native"},{"l":"Other parameters"},{"l":"Example netconf request"},{"l":"Uninstalling Netconf device"},{"i":"example-request-1","l":"Example request"}],[{"l":"UniConfig CLI"},{"l":"Introduction"},{"l":"Architecture"},{"l":"CLI topology"},{"l":"CLI mountpoint"},{"l":"Translation layer"},{"l":"Device specific translation plugin"},{"l":"Units"},{"l":"Transport layer"},{"l":"Data processing"},{"l":"Reconciliation"},{"l":"RPCs provided by CLI layer"},{"i":"rpc-execute-and-read","l":"RPC: Execute-and-read"},{"l":"Description"},{"l":"Example"},{"l":"Wait-for-echo behaviour"},{"i":"rpc-execute-and-expect","l":"RPC: Execute-and-expect"},{"i":"description-1","l":"Description"},{"i":"example-1","l":"Example"},{"i":"rpc-execute-and-read-until","l":"RPC: Execute-and-read-until"},{"i":"description-2","l":"Description"},{"i":"example-2","l":"Example"},{"i":"rpc-execute","l":"RPC: Execute"},{"i":"description-3","l":"Description"},{"i":"example-3","l":"Example"}],[{"l":"UniConfig NETCONF"},{"l":"Overview"},{"l":"NETCONF southbound plugin"},{"l":"Introduction to southbound plugin and netconf-connectors"},{"l":"Spawning of netconf-connectors while the controller is running"},{"i":"authentification-with-privatepublic-key","l":"Authentification with private/public key"},{"l":"PKI Data persistence in NETCONF"},{"l":"Keepalive settings"},{"l":"Reconnection strategy"},{"l":"Local NETCONF cache repositories"},{"l":"Local Netconf default cache repository"},{"l":"Connecting to a device not supporting NETCONF monitoring"},{"l":"Registration or refreshing of NETCONF cache repository using RPC"},{"l":"Reconfiguring netconf-connector while the controller is running"},{"l":"Destroying of netconf-connector"},{"l":"NETCONF test-tool"},{"l":"Test-tool overview"},{"l":"Starting of the test-tool"},{"l":"Increasing the maximum number of opened files"},{"i":"how-does-the-frinx-uniconfig-distribution-use-netconf","l":"How does the FRINX UniConfig distribution use NETCONF?"},{"l":"UniConfig-native NETCONF"},{"l":"Examples"}],[{"l":"Calix devices"},{"l":"Mount Calix device"},{"l":"Check if Calix device is connected"},{"l":"Check if Calix device configuration is available in UniConfig"}],[{"l":"Cisco IOS XR devices"},{"l":"Install Cisco XR device"},{"l":"Check if Cisco XR device is installed succesfully"},{"l":"Check if Cisco XR device configuration is available in UniConfig"},{"l":"Check if Cisco XR device has an existing interface"},{"l":"Uninstall device"}],[{"l":"IP Infusion OcNOS Devices"},{"l":"Installing a OcNos device with UniConfig"},{"l":"Show configuration"},{"l":"Troubleshooting OcNos installing with UniConfig"}],[{"l":"Juniper Junos devices"},{"l":"Install Junos device"},{"l":"Show configuration"},{"l":"Show interface configuration"},{"l":"Enable interface in configuration"},{"l":"Disable interface in configuration"}],[{"l":"Nokia SROS devices"},{"l":"Preliminar"},{"l":"Install SROS device"},{"l":"Check if SROS device is connected"},{"l":"Check if SROS device configuration is available in UniConfig"}],[{"l":"UniConfig-native CLI"},{"l":"Introduction"},{"l":"Installation"},{"l":"Architecture"},{"l":"Modules"},{"l":"Registration of handlers"},{"l":"Functionality of readers"},{"l":"Functionality of writers"}],[{"l":"UniConfig Operations"},{"i":"sending-and-receiving-data-restconf","l":"Sending and receiving data (RESTCONF)"},{"l":"UniConfig Node Manager API"},{"l":"Device discovery"},{"l":"Dry-run Manager API"},{"l":"Snapshot Manager API"},{"l":"Subtree Manager API"},{"l":"Templates Manager API"},{"l":"Websocket Notifications"},{"l":"Transaction Log API"},{"i":"dedicated-transaction-immediate-commit-model","l":"Dedicated transaction (Immediate Commit Model)"}],[{"l":"Snapshot Manager"},{"l":"Create snapshot"},{"l":"Delete snapshot"},{"l":"Replace config with snapshot"},{"l":"Obtain snapshot metadata"}],[{"l":"Obtaining snapshots-metadata"}],[{"l":"RPC create-snapshot"},{"l":"RPC Examples"},{"l":"Successful Example"},{"l":"Failed Example"},{"i":"failed-example-1","l":"Failed example"},{"i":"failed-example-2","l":"Failed Example"},{"i":"failed-example-3","l":"Failed Example"}],[{"l":"RPC delete-snapshot"},{"l":"RPC Examples"},{"l":"Successful Example"},{"l":"Failed example"}],[{"l":"RPC replace-config-with-snapshot"},{"l":"RPC Examples"},{"l":"Successful Example"},{"l":"Failed Example"},{"i":"failed-example-1","l":"Failed Example"},{"i":"failed-example-2","l":"Failed Example"},{"i":"failed-example-3","l":"Failed Example"}],[{"l":"Subtree Manager"},{"l":"RPC copy-one-to-one"},{"l":"RPC copy-one-to-many"},{"l":"RPC copy-many-to-one"},{"l":"RPC calculate-subtree-diff"},{"l":"RPC calculate-subtree-git-like-diff"}],[{"l":"RPC calculate-subtree-diff"},{"l":"RPC Examples"},{"l":"Successful example"},{"l":"Failed Example"},{"i":"failed-example-1","l":"Failed Example"}],[{"l":"RPC calculate-subtree-git-like-diff"},{"l":"RPC Examples"},{"l":"Successful example"},{"i":"successful-example-1","l":"Successful example"},{"l":"Failed example"},{"i":"failed-example-1","l":"Failed example"}],[{"l":"RPC copy-many-to-one"},{"l":"RPC Examples"},{"l":"Successful example"},{"l":"Failed example"}],[{"l":"RPC copy-one-to-many"},{"l":"RPC Examples"},{"l":"Successful example"},{"l":"Failed example"}],[{"l":"RPC copy-one-to-one"},{"l":"RPC Examples"},{"l":"Successful example"},{"l":"Failed example"}],[{"l":"Transaction Log"},{"l":"RPC revert-changes"},{"l":"Transaction tracker"}],[{"l":"RPC revert-changes"},{"l":"Ignore non-existent nodes"},{"l":"RPC Examples"},{"l":"Successful examples"},{"l":"Failed example"}],[{"l":"Transaction tracker"},{"l":"Introduction"},{"l":"Configuration"},{"l":"Show transaction-metadata"}],[{"l":"UniConfig Node Manager"}],[{"l":"RPC calculate-diff"},{"l":"RPC Examples"},{"l":"Successful Example"},{"i":"successful-example-1","l":"Successful Example"},{"l":"Failed Example"},{"i":"failed-example-1","l":"Failed Example"}],[{"l":"RPC calculate-git-like-diff"},{"l":"RPC Examples"},{"l":"Successful Example"},{"l":"Failed Example"}],[{"l":"RPC check-installed-nodes"},{"l":"RPC Examples"},{"l":"Successful example"},{"i":"successful-example-1","l":"Successful example"},{"l":"Failed Example"}],[{"l":"RPC checked-commit"},{"l":"RPC Examples"},{"l":"Successful Example"},{"i":"successful-example-1","l":"Successful Example"},{"l":"Failed Example"},{"i":"failed-example-1","l":"Failed Example"},{"i":"failed-example-2","l":"Failed Example"},{"i":"failed-example-3","l":"Failed Example"}],[{"l":"RPC commit"},{"l":"RPC Examples"},{"l":"Successful Example"},{"i":"successful-example-1","l":"Successful Example"},{"l":"Failed Example"},{"i":"failed-example-1","l":"Failed Example"},{"i":"failed-example-2","l":"Failed Example"},{"i":"failed-example-3","l":"Failed Example"},{"i":"failed-example-4","l":"Failed Example"},{"i":"failed-example-5","l":"Failed Example"},{"i":"failed-example-6","l":"Failed Example"},{"i":"failed-example-7","l":"Failed Example"}],[{"l":"RPC health"},{"l":"RPC Examples"}],[{"l":"RPC install-multiple-nodes"},{"l":"RPC Examples"},{"l":"Successful example"},{"i":"successful-example-1","l":"Successful example"},{"i":"successful-example-2","l":"Successful example"},{"l":"Failed Example"}],[{"l":"RPC is-in-sync"},{"l":"RPC Examples"},{"l":"Successful Example"},{"i":"successful-example-1","l":"Successful Example"},{"l":"Failed Example"},{"i":"failed-example-1","l":"Failed Example"},{"i":"failed-example-2","l":"Failed Example"}],[{"l":"RPC replace-config-with-operational"},{"l":"RPC Examples"},{"l":"Successful Example"},{"i":"successful-example-1","l":"Successful Example"},{"l":"Failed Example"},{"i":"failed-example-1","l":"Failed Example"}],[{"l":"RPC show-connection-status"},{"l":"RPC Examples"},{"l":"CLI Device Example"},{"l":"Netconf Device Example"}],[{"l":"RPC sync-from-network"},{"l":"RPC Examples"},{"l":"Successful Example"},{"l":"Failed Example"},{"i":"failed-example-1","l":"Failed Example"}],[{"l":"RPC uninstall-multiple-nodes"},{"l":"RPC Examples"},{"l":"Successful example"},{"i":"successful-example-1","l":"Successful example"},{"i":"successful-example-2","l":"Successful example"},{"l":"Failed Example"}],[{"l":"RPC validate"},{"l":"RPC Examples"},{"l":"Successful Example"},{"l":"Failed Example"}],[{"l":"WebSocket Notifications"},{"l":"Background"},{"l":"Architecture"},{"l":"Operations"}],[{"l":"Operations"},{"l":"Architecture"},{"i":"operations-1","l":"Operations"}],[{"l":"Get available streams"},{"l":"RPC Examples"},{"l":"Successful example"}],[{"l":"Architecture"},{"l":"Components schema"},{"l":"Streams available for subscription"},{"l":"Subscription workflow"},{"l":"Creation of the subscription"},{"l":"Creation of the WebSocket connection"},{"l":"Notifications cache"},{"l":"Separate NETCONF session for subscription"},{"l":"WebSocket connection and data transfer"},{"l":"Notification Examples"}],[{"l":"Build-and-Commit Model"},{"l":"Introduction"},{"l":"Configuration"},{"l":"Optimistic locking mechanism"},{"l":"Dynamic mountpoints"},{"l":"Creation of transaction"},{"l":"Successful example"},{"l":"Failed example"},{"l":"Invocation of CRUD operation in transaction"},{"i":"successful-example-1","l":"Successful example"},{"i":"failed-example-1","l":"Failed example"},{"l":"Invocation of RPC operation in transaction"},{"i":"successful-example-2","l":"Successful example"},{"i":"failed-example-2","l":"Failed example"},{"l":"Closing transaction"},{"i":"successful-example-3","l":"Successful example"},{"i":"failed-example-3","l":"Failed example"},{"l":"Transaction cleaner"},{"l":"Use cases"},{"l":"Modification of different devices in separate transactions"},{"l":"Modification of sub-tree on same device in separate transactions"}],[{"l":"Device Discovery"},{"l":"RPC Examples"},{"l":"Successful example"},{"i":"successful-example-1","l":"Successful example"},{"i":"successful-example-2","l":"Successful example"},{"l":"Failed Example"},{"i":"failed-example-1","l":"Failed Example"},{"l":"Not supported operation Example"}],[{"l":"Dry-run manager"},{"l":"RPC dryrun-commit"},{"l":"RPC Examples"},{"l":"Successful example"},{"i":"successful-example-1","l":"Successful example"},{"l":"Failed Example"},{"i":"failed-example-1","l":"Failed Example"},{"i":"failed-example-2","l":"Failed Example"},{"i":"failed-example-3","l":"Failed Example"},{"i":"failed-example-4","l":"Failed Example"}],[{"l":"Immediate Commit Model"},{"l":"RPC Examples"},{"l":"Successful example"},{"l":"Failed Example"}],[{"l":"Templates Manager"},{"l":"Overview"},{"l":"Latest-schema"},{"l":"Configuration of the latest-schema"},{"l":"Auto-upgrading of the latest-schema"},{"l":"Variables"},{"l":"Examples with variables"},{"l":"Tags"},{"l":"Examples with tags"},{"l":"Creation of template"},{"i":"example---creation-of-template","l":"Example - creation of template"},{"i":"readupdatedelete-template","l":"Read/update/delete template"},{"i":"examples---restconf-operations","l":"Examples - RESTCONF operations"},{"l":"Application of template"},{"i":"examples---apply-template-calls","l":"Examples - apply-template calls"}],[{"i":"uniconfig---sending-and-receiving-data-restconf","l":"UniConfig - Sending and receiving data (RESTCONF)"},{"l":"Overview"},{"l":"Datastores"},{"l":"REST Operations"},{"l":"Mount point"},{"l":"HTTP methods"},{"i":"options-rests","l":"OPTIONS /rests"},{"i":"get-restsdataidentifiercontentconfig","l":"GET /rests/data/<identifier>?content=config"},{"i":"get-restsdataidentifiercontentnonconfig","l":"GET /rests/data/<identifier>?content=nonconfig"},{"i":"get-restsdataidentifier","l":"GET /rests/data/<identifier>"},{"i":"put-restsdataidentifier","l":"PUT /rests/data/<identifier>"},{"i":"post-restsdataidentifier","l":"POST /rests/data/<identifier>"},{"i":"post-restsdata","l":"POST /rests/data"},{"i":"delete-restsdataidentifier","l":"DELETE /rests/data/<identifier>"},{"i":"patch-restsdataidentifier","l":"PATCH /rests/data/<identifier>"},{"i":"post-restsoperationsmodulenamerpcname","l":"POST /rests/operations/<moduleName>:<rpcName>"},{"i":"post-restsdatapath-to-operation","l":"POST /rests/data/<path-to-operation>"},{"l":"Selecting Data"},{"l":"Fields"},{"l":"Filtering Data"},{"l":"Jsonb-filter"},{"l":"Jsonb-filter expression"},{"l":"Jsonb-filter examples"},{"l":"Pagination"},{"l":"Sorting"},{"l":"JSON Attributes"},{"i":"example---leaf-with-attributes","l":"Example - leaf with attributes"},{"i":"example-container-with-attributes","l":"Example: Container with Attributes"},{"i":"example-leaf-list-with-attributes","l":"Example: Leaf-list with Attributes"},{"i":"example-leaf-list-entry-with-attributes","l":"Example: Leaf-list Entry with Attributes"},{"i":"example-list-with-attributes","l":"Example: List with Attributes"},{"i":"example-list-entry-with-attributes","l":"Example: List Entry with Attributes"},{"l":"Device Schema Filters"},{"l":"Configuration Options Overview"},{"l":"Configuration Example"},{"l":"Unhide Parameter for READ Operation"},{"l":"Leafref validation"}],[{"l":"UniStore API"},{"l":"Introduction"},{"l":"Commit operation"},{"l":"Example use-case"},{"l":"Preparation of YANG repository"},{"l":"Creation of UniStore node"},{"l":"Reading content of UniStore node"},{"i":"calculate-diff-rpc-created-node","l":"Calculate-diff RPC (created node)"},{"l":"Persistence of UniStore node"},{"l":"Reading committed configuration"},{"l":"Verification of configuration fingerprint"},{"l":"Modification of configuration"},{"i":"calculate-diff-rpc-updated-node","l":"Calculate-diff RPC (updated node)"},{"l":"Commit made changes"},{"l":"Displaying content of transaction-log"},{"l":"Removal of UniStore node"}],[{"l":"Operational Procedures"},{"l":"Logging"},{"l":"AAA"},{"l":"TLS"},{"l":"OpenAPI"},{"l":"Data Security Models"}],[{"i":"authentication-authorization-and-accounting-aaa-services","l":"Authentication, Authorization and Accounting (AAA) Services"},{"l":"Overview"},{"l":"Terms And Definitions"},{"l":"Security Framework for AAA services"},{"l":"How to enable AAA"},{"l":"How to disable AAA"},{"l":"AAA Realms"},{"l":"TokenAuthRealm"},{"l":"How it works"},{"l":"Configuring TokenAuthRealm"},{"l":"Idmtool"},{"l":"Add a user"},{"l":"Delete a user"},{"l":"List all users"},{"i":"change-a-users-password","l":"Change a user's password"},{"l":"Add a role"},{"l":"Delete a role"},{"l":"List all roles"},{"l":"List all domains"},{"l":"Add a grant"},{"l":"Delete a grant"},{"l":"Get grants for a user"},{"l":"Configuration using the RESTful Web Service"},{"l":"Get All Users"},{"l":"Create a User"},{"l":"KeystoneAuthRealm"},{"i":"how-it-works-1","l":"How it works"},{"l":"Configuring KeystoneAuthRealm"},{"l":"Authorization Configuration"},{"l":"Shiro-Based Static Authorization"},{"l":"Enable admin Role Based Access to the IdMLight RESTful web service"},{"l":"MDSAL-Based Dynamic Authorization"}],[{"l":"Data Security Models"},{"l":"Data encryption"},{"l":"Global-device encryption architecture"},{"l":"Global-only encryption architecture"},{"l":"YANG support"},{"l":"Configuration"},{"l":"Device installation"},{"i":"example-global-device-model","l":"Example: global-device model"},{"i":"example-global-only-model","l":"Example: global-only model"},{"l":"Data hashing"},{"l":"Architecture"},{"i":"yang-support-1","l":"YANG support"},{"i":"device-installation-1","l":"Device installation"},{"i":"example-hashing-input-values","l":"Example: hashing input values"}],[{"l":"Logging Framework"},{"l":"Logback Configuration"},{"l":"Appenders"},{"l":"Loggers"},{"l":"Updating Configuration"},{"l":"Example configuration"},{"l":"INFO"},{"l":"DEBUG"},{"l":"TRACE"},{"l":"Logging Brokers"},{"l":"Implemented Logging Brokers"},{"l":"RESTCONF"},{"l":"CLI messages"},{"l":"NETCONF Messages"},{"l":"NETCONF Notifications"},{"l":"NETCONF Events"},{"l":"Supported Logging Settings"},{"l":"Initial Configuration"},{"l":"Controlling of Logging Using RPC Calls"},{"l":"Enable Logging Broker"},{"l":"Disable Logging Broker"},{"l":"Enable Default Device Logging"},{"l":"Disable Default Device Logging"},{"l":"Enable Device Logging"},{"l":"Disable Device Logging"},{"l":"Setting Global Hidden Types"},{"l":"Setting Hidden HTTP Headers"},{"l":"Setting Hidden HTTP Methods"}],[{"l":"OpenAPI"}],[{"l":"TLS-based Authentication"},{"l":"Setting of Key-store and Trust-store"},{"l":"Enabling of TLS in UniConfig"}],[{"l":"Developer Guide"}],[{"l":"Architecture"},{"l":"Pre-requisite reading"},{"l":"Building on honeycomb"},{"l":"Major components"},{"l":"Modules"}],[{"l":"Translation Units in general"},{"l":"Module structure"},{"l":"Handlers"},{"l":"Base Handlers"}],[{"l":"Translation Units Documentation for FRINX Uniconfig"},{"l":"Auto-generated documentation"},{"l":"Manual documentation"},{"l":"OPERATIONAL datasets"},{"l":"URL"},{"l":"OPENCONFIG YANG"},{"l":"OS COMMANDS"},{"l":"DEVICE YANG"},{"l":"UNIT"},{"l":"CONFIGURATION datasets"},{"i":"url-1","l":"URL"},{"i":"openconfig-yang-1","l":"OPENCONFIG YANG"},{"i":"os-commands-1","l":"OS COMMANDS"},{"i":"device-yang-1","l":"DEVICE YANG"},{"i":"unit-1","l":"UNIT"}],[{"l":"OpenConfig to device config mapping"},{"l":"Finding mapping between device and the model"},{"l":"Choosing the right YANG models"},{"l":"Existing documentation"}],[{"l":"Developing a new translation unit"},{"i":"best-practices-for-handlers-readerswriters","l":"Best practices for handlers (readers/writers)"}],[{"l":"Implementing CLI Translation Unit"},{"l":"Init Unit"},{"l":"Translate Unit"},{"l":"Ordering of handlers"},{"l":"Device registration"},{"l":"Readers"},{"l":"Reading of CLI and device configuration"},{"i":"reading-of-configuration-from-cli-network-device---different-scenarios","l":"Reading of configuration from CLI network device - different scenarios"},{"l":"Mandatory interfaces to implement"},{"l":"Util classes"},{"l":"Plaintext parsing hints"},{"l":"Base Readers"},{"l":"Writers"},{"i":"mandatory-interfaces-to-implement-1","l":"Mandatory interfaces to implement"},{"l":"Base Writers"},{"l":"Chunk Templates"}],[{"l":"NETCONF Unified Translation Unit"},{"l":"TranslateUnit"},{"l":"Readers"},{"l":"Mandatory interfaces to implement"},{"l":"Base Readers"},{"l":"Writers"},{"i":"mandatory-interfaces-to-implement-1","l":"Mandatory interfaces to implement"},{"l":"Base Writers"}],[{"l":"Native-CLI translation units"},{"l":"Modules structure"},{"l":"Implementation of units"},{"l":"Device-specific units"},{"l":"Init units"},{"l":"Device-template YANG model"},{"l":"Native-CLI YANG model"},{"l":"Structure"},{"l":"Containers"},{"l":"Lists"},{"l":"Choices"},{"l":"Leaves"}],[{"l":"Release notes"}],[{"i":"uniconfig-429","l":"UniConfig 4.2.9"},{"l":"UniConfig"},{"l":"CLI"},{"l":"RESTCONF"},{"l":"NETCONF"},{"l":"TRANSLATION-UNITS-FRAMEWORK"},{"l":"CONTROLLER"},{"l":"SWAGGER"},{"l":"NETCONF TRANSLATION UNITS"},{"l":"CLI TRANSLATION UNITS"}],[{"i":"uniconfig-428","l":"UniConfig 4.2.8"},{"l":"UniConfig"},{"l":"CONTROLLER"},{"l":"SWAGGER"},{"l":"CLI"},{"l":"NETCONF"},{"l":"RESTCONF"},{"l":"CLI TRANSLATION UNITS"},{"l":"NETCONF TRANSLATION UNITS"},{"l":"OPENCONFIG"}],[{"i":"uniconfig-427","l":"UniConfig 4.2.7"},{"l":"Uniconfig"},{"l":"Controller"},{"l":"Swagger"},{"l":"Translation units framework"},{"l":"CLI"},{"l":"NETCONF"},{"l":"RESTCONF"},{"l":"NETCONF translation units"},{"l":"CLI translation units"},{"l":"Openconfig"}],[{"i":"uniconfig-426","l":"UniConfig 4.2.6"},{"i":"uniconfig","l":"UniConfig:"},{"i":"controller","l":"CONTROLLER:"},{"i":"cli","l":"CLI:"},{"i":"netconf","l":"NETCONF:"},{"i":"restconf","l":"RESTCONF:"},{"i":"cli-translation-units","l":"CLI TRANSLATION UNITS:"},{"i":"openconfig","l":"OPENCONFIG:"},{"i":"known-issues","l":"Known Issues:"}],[{"i":"uniconfig-425","l":"UniConfig 4.2.5"},{"i":"uniconfig","l":"UniConfig:"},{"i":"cli","l":"CLI:"},{"i":"netconf","l":"NETCONF:"},{"i":"restconf","l":"RESTCONF:"},{"i":"controller","l":"CONTROLLER:"},{"i":"distribution","l":"DISTRIBUTION:"},{"i":"translation-units","l":"TRANSLATION UNITS:"},{"i":"netconf-translation-units","l":"NETCONF TRANSLATION UNITS:"},{"i":"cli-translation-units","l":"CLI TRANSLATION UNITS:"},{"i":"openconfig","l":"OPENCONFIG:"},{"i":"known-issues","l":"Known Issues:"}],[{"i":"uniconfig-424","l":"UniConfig 4.2.4"},{"i":"uniconfig","l":"UniConfig:"},{"l":"UniConfig Native"},{"l":"CLI"},{"l":"OpenConfig"},{"l":"NETCONF"},{"l":"Translation units"}],[{"i":"uniconfig-423","l":"UniConfig 4.2.3"},{"i":"uniconfig","l":"UniConfig:"},{"l":"UniConfig Native"},{"l":"Lighty"},{"l":"RESTCONF"},{"l":"OpenConfig"},{"l":"NETCONF"},{"l":"Translation Units"},{"l":"Known Issues"}],[{"l":"FAQ"},{"i":"what-is-the-datastore-used-in-frinx-uniconfig-","l":"What is the datastore used in FRINX UniConfig ?"},{"i":"are-service-instances-stored-in-the-uniconfig-layer-of-frinx-","l":"Are service instances stored in the UniConfig layer of FRINX ?"},{"i":"how-does-frinx-deal-with-model-changes-","l":"How does FRINX deal with model changes ?"},{"i":"does-frinx-provide-auto-rollback-on-all-affected-devices-when-a-transaction-fails-on-one-or-more-devices-","l":"Does FRINX provide auto rollback on all affected devices, when a transaction fails on one or more devices ?"},{"i":"is-it-possible-to-show-the-differences-between-the-actual-device-configuration-and-the-operational-datastore-while-synchronizing-configuration-into-frinx-","l":"Is it possible to show the differences between the actual device configuration and the operational datastore while synchronizing configuration into FRINX ?"},{"i":"is-any-netconf-device-fully-supported-or-must-openconfig-be-mapped-to-netconf-as-well-","l":"Is any NETCONF device fully supported, or must OpenConfig be mapped to netconf as well ?"},{"i":"are-the-libraries-that-are-used-to-access-the-config-data-store-model-driven-","l":"Are the libraries that are used to access the Config Data Store model driven ?"},{"i":"what-would-an-access-to-the-configuration-data-store-look-like-in-code-","l":"What would an access to the configuration data store look like in code ?"},{"i":"is-it-possible-in-frinx-to-run-transaction-on-two-disjunct-sets-of-devices-simultaneously-","l":"Is it possible in FRINX to run transaction on two disjunct sets of devices simultaneously ?"},{"i":"what-access-control-measures-does-frinx-offer-","l":"What access control measures does FRINX offer ?"},{"i":"how-does-frinx-report-problems-with-device-interaction-","l":"How does FRINX report problems with device interaction ?"},{"i":"is-it-possible-to-backup-configuration-","l":"Is it possible to backup configuration ?"},{"i":"is-it-possible-to-enforce-policies-over-configuration-changes-","l":"Is it possible to enforce policies over configuration changes ?"},{"i":"in-which-languages-are-the-libraries-to-access-frinx-written-","l":"In which languages are the libraries to access FRINX written ?"},{"i":"does-frinx-detect-if-a-cluster-node-is-down-on-its-own-or-does-it-rely-on-a-high-availability-framework-","l":"Does FRINX detect if a cluster node is down on its own or does it rely on a high availability framework ?"},{"i":"is-it-possible-for-frinx-to-report-problems-to-a-network-monitoring-system-","l":"Is it possible for FRINX to report problems to a network monitoring system ?"},{"i":"is-it-possible-to-do-additional-logging-on-the-logging-provided-by-uniconfig-","l":"Is it possible to do additional logging on the logging provided by UniConfig ?"},{"i":"where-do-i-find-the-status-of-the-device-and-where-do-i-find-error-messages-when-installing-does-not-work-","l":"Where do I find the status of the device and where do I find error messages, when installing does not work ?"},{"i":"what-does-installation-and-installing-exactly-do-","l":"What does installation and installing exactly do ?"},{"i":"why-i-can-not-install-junos-device-on-uniconfig-","l":"Why I can not install Junos device on UniConfig ?"}],[{"l":"Generated API libs"},{"l":"Swagger"},{"l":"How to launch Swagger-UI"},{"l":"UniConfig OpenAPI v2"},{"l":"UniConfig Python and Go clients"},{"l":"Southbound OpenAPI v2"},{"l":"Southbound Python and Go clients"}],[{"l":"Glossary of Terms"}],[{"l":"List of Supported Devices"}],[{"l":"FRINX UniFlow introduction"}],[{"l":"Create and Modify Workflows and Workers"},{"l":"Prepare Your Work Environment"},{"l":"Creating a worker"},{"i":"after-being-prompted-for-inputs-you-should-see-that-addition-ran-successfully","l":"After being prompted for inputs, you should see that addition ran successfully:"}],[{"l":"Device Blueprints"},{"l":"Creating new blueprint"},{"l":"Using a blueprint"},{"l":"Blueprint examples"},{"i":"cisco-classic-ios-cli","l":"Cisco classic IOS (cli)"},{"i":"cisco-ios-xr-netconf","l":"Cisco IOS XR (netconf)"},{"i":"junos-cli","l":"JUNOS (cli)"},{"i":"calix-netconf","l":"CALIX (netconf)"},{"i":"nokia-netconf","l":"Nokia (netconf)"},{"i":"ciena-cli","l":"Ciena (cli)"}],[{"l":"Device Inventory"},{"l":"Adding device to inventory"},{"l":"JSON examples"},{"i":"cisco-classic-ios-cli","l":"Cisco classic IOS (cli)"},{"i":"cisco-ios-xr-netconf","l":"Cisco IOS XR (netconf)"},{"i":"junos-cli","l":"JUNOS (cli)"},{"i":"calix-netconf","l":"CALIX (netconf)"},{"i":"nokia-netconf","l":"Nokia (netconf)"},{"i":"ciena-cli","l":"Ciena (cli)"}],[{"l":"Workflow Builder"},{"l":"Creating new workflow"},{"l":"Editing existing workflow"},{"l":"Adding tasks"},{"l":"Removing tasks"},{"l":"Task parameters"},{"l":"System tasks"},{"i":"fork--join","l":"Fork & Join"},{"l":"Decision"},{"l":"Lambda"},{"l":"HTTP"},{"l":"TERMINATE"},{"l":"EVENT"},{"l":"WAIT"},{"l":"jsonJQ"},{"l":"Kafka publish"},{"l":"Subworkflows"},{"l":"Linking tasks"},{"l":"Unlinking tasks"},{"l":"Adding workflow information"},{"l":"Output parameters"},{"i":"defaults--description","l":"Defaults & Description"},{"l":"Save and execute workflow"},{"l":"Import and export of workflows"}],[{"l":"FRINX UniResource introduction"},{"l":"Features"},{"l":"Resource type management"},{"l":"Resource management"},{"l":"Flexible design"},{"l":"Multitenancy and RBAC"}],[{"l":"User Guide"},{"l":"API"},{"l":"UI"}],[{"l":"Pools"},{"l":"SetPool"},{"l":"SingletonPool"},{"l":"AllocatingPool"},{"l":"Allocation strategy overview"},{"l":"Pool hierarchies"},{"l":"Labels"},{"i":"configuration-pool-instance-per-label","l":"Configuration: Pool instance per Label"},{"i":"configuration-pool-instance-under-multiple-labels","l":"Configuration: Pool instance under multiple labels"},{"i":"configuration-pool-grouping","l":"Configuration: Pool grouping"},{"i":"configuration-multiple-pool-instances-under-the-same-label","l":"Configuration: Multiple pool instances under the same Label"}],[{"l":"UniResource Architecture"},{"l":"Technology stack"},{"l":"Entity model"}],[{"l":"Developer Guide"},{"l":"Dependency on symphony"},{"l":"Folder structure"},{"l":"Build"},{"l":"GraphQL schema"},{"l":"Built in strategies"},{"l":"Unit tests"},{"l":"Integration tests"},{"l":"API tests"},{"l":"Wasmer"},{"l":"Additional info"},{"l":"Telementry"},{"l":"Health"},{"l":"Metrics"}]]