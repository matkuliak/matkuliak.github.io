[[{"i":"welcome-to-my-docs","l":"Welcome to my docs!","p":["These pages serve as a catalog of my work. It should be the second thing you look at after my CV or LinkedIn.","✨ ✨"]},{"i":"a-few-examples-of-content-i-have-worked-on","l":"A few examples of content I have worked on:","p":["Example tutorial- Importing data from InfluxDB","Example guide- Data pipeline with Kafka and CrateDB","Example community post- Data analysis with Cluvio","Example blog post- Analysis of ingestion improvements with vertical/horizontal scaling","DocOps- Implemented the documentation solution and workflows for Frinx.","Notable task was automating release notes production, pulling info directly from dev commits.","API docs- Network automation tool introduction.","So far I've had a really diverse experience as a technical writer. As time went it ranged from networking engineer to typical technical writer to content manager and reviewer. I was comfortable in this hybrid position. It however makes for a difficult explanation of what I do at times. Because of that, I try to summarize my responsibilities by frequency below:"]},{"l":"My Responsibilities"},{"i":"routine-tasks-daily-to-weekly-occurrence","l":"Routine tasks (daily to weekly occurrence)","p":["Development of new documentation—In the process, I test the product myself and communicate with both the product and development teams. Thanks to that, I have experience working on open-source projects with multiple collaborators, tracking everything in collaboration tools like Jira, GitHub Projects, etc.","I'm a big proponent of the docs-as-code approach. Most of my experience is with Sphinx. However, it is slightly dated, depending on the use case, so when starting a fresh docs project, I like to use Retype(This website is also built with Retype!). I also have experience with Jira, Word, Notion, and other popular docs tools.","Review- In my experience, developers also write documentation regularly. When this happens, I'm happy to help out.","API development- I regularly prepare and document API collections for internal training, new products, or even specific customer use cases.","UX input- Due to my hybrid role, I sometimes have a different perspective than a traditional developer which can lead to a UI adjustment or the introduction of a new feature.","Analytics- Keeping an eye on SEO, our numbers in Google Analytics, reception of new guides and updates, etc. Also included in our Ads focus and spending."]},{"i":"less-frequent-tasks-every-couple-of-weeks-to-a-couple-of-months","l":"Less frequent tasks (every couple of weeks to a couple of months)","p":["Development of long-term content strategies.- With multiple software products, content priorities shift based on the goals of the product and development teams. I also prioritize customer feedback, which significantly influences my focus areas.","Releases- Frinx used to write release notes manually together with product and developer teams. I automated that process. Standardization of commit messages, together with a few scripts, allowed us to pull release notes directly from Github commit history. E.g., https://docs.frinx.io/frinx-uniconfig/release-notes/uniconfig-5.0.7/","Website management- I managed a ReactJS website. Changes weren't needed often as it wasn't the main space for communication, but new content was added by me. https://frinx.io/","Networking devices environment setup- I worked in the networking lab at one of the jobs. Worked with multiple vendors (Cisco, Juniper, Ciena, Huawei, etc.). Thanks to my networking background I was often assigned to the beginning stages of projects. Get a sense of the scope of the project and the work that will be needed to be done.","Design- Experience in Photoshop, Illustrator, and InDesign for promotional documents.","DevOps- Work with VMs (Proxmox), preparation of the environment, and allocation of resources. A good amount of work with dockerized applications (Docker/Kubernetes).","CI/CD infrastructure- I have experience with infrastructure work. Mainly Jenkins jobs for automated builds/tests and Artifactory for binaries storage."]}],[{"l":"Onepager"},{"i":"1-deploying-weaviate-to-aws-eks-high-level-guide","l":"[1] Deploying Weaviate to AWS EKS: High-Level Guide","p":["In this high-level guide you will learn how to deploy Weaviate to AWS managed Kubernetes service. The guide consists of the following steps:","Initial AWS access configuration","Provisioning AWS cluster and nodes","Deploying the Weaviate cluster"]},{"l":"Prerequisites","p":["This guide mostly uses CLI to deploy and operate your resources so you are going to need a few tools present in your system:","AWS CLI- official AWS command-line-interface that makes your AWS resources accessible from your local console.","kubectl- command-line-interface used to interact with your cluster.","helm- package manager used to manage your Kubernetes applications.","You also need access to an AWS account where you can deploy a cluster"]},{"l":"AWS environment setup","p":["To access AWS from your local environment you need to create access keys in the AWS console. These consist of Access Key ID and Secret Access Key","When deploying a long-term production applications, it is recommended to use temporary security credentials (such as IAM roles) instead of creating long-term credentials like access keys.","With the keys to access your resources, you can connect your local environment to AWS. Take care to use your correct keys and your preferred region, we use Europe as an example.","You may also need to verify the identity of your connection in your console:","explain creating and attaching correct IAM roles to cluster/nodes"]},{"l":"Create an AWS cluster","p":["Now you are ready to create the AWS cluster and provision nodes where Weaviate will run.","We are creating a cluster called test-weaviate-cluster in the eu-central-1 region with the default arn role and permissions AmazonEKSAutoClusterRole. The cluster has a vpc configured, with 3 subnets and a security group.","explain the correct configuration of the subnets and security group","explain how to switch local context to the aws environment"]},{"l":"Addons","p":["Considering our use case, there are a few AWS Addons that should be used:","Add the rest of the addons in a similar fashion:","CoreDNS: Required for internal service discovery.","kube-proxy: Manages networking rules for communication between Kubernetes services.","Amazon VPC CNI: Handles pod networking.","Amazon EBS CSI Driver: Necessary for dynamic storage provisioning, critical for database workloads."]},{"l":"Provisioning nodes","p":["For this guide we use two on-demand small nodes with a modest amount of storage.","AMI type: Amazon Linux 2","Instance type: t3.small","Minimum size: 1","Maximum & Desired size: 2","Storage: 20GiB","mention why it is recommended to use gp2 or gp3 EBS volumes."]},{"l":"Deploying","p":["Weaviate can be deployed with the provided Helm Chart.","full exaplanation of the deployment itself. Doing this in the second step-by-step part."]},{"l":"Monitoring","p":["provide an example monitoring stack. Something like Prometheus, Loki, Promtail, Grafana. Prometheus looks to be built-in looking at the helm chart.","we could also provide an example data Visualization solution. I have used things like Metabase, Grafana of course, Looker Studio."]},{"i":"2-deploying-weaviate-with-helm","l":"[2] Deploying Weaviate with helm","p":["Add the Weaviate helm repo:","After configuring your cluster and provisioning adequate resources you can now deploy Weaviate using provided Helm Chart.","After correct deployment there are next steps that you might want to consider:","Another popular tool is Alertmanager. It can help identify issues soon with integration with communication services like Slack, Teams, etc.","As an example, for our deployment we changed the size of storage and the type of storage:","Authentication & Authorization: Enable API key-based authentication, OIDC integration, and RBAC for user roles.","Create the weaviate namespace","Data Management: S3 and other backup solutions.","Deploy","Deploy a monitoring solution stack, e.g. Prometheus, Loki, Promtail, Grafana","Example would be Terraform","Export the default chart into accessible file:","Follow security best practices: Enable Api Keys, OIDC","Helm is a package manager tool for Kubernetes that makes it easier to tweak provided package to your specific needs and use case using helm charts.","Keep your Weaviate deployment up to date","Modules: Enable vectorization, generative AI, multimodal processing, and query-ranking modules.","Networking: Services for HTTP and gRPC with LoadBalancer or ClusterIP.","Observability: Configure Prometheus.","Restrict external access, e.g. to your organization's VPN","Scaling and Resources: Replicas, Resource requests/limits, Scheduling.","Storage: Define persistent volumes, storage class, and available storage.","The values.yaml configuration allows you to customize all the parameters you might need:","To keep up with your needs, you might want to Scale Weaviate","Verify the deployment","When moving to production deployments you should consider adopting the Infrastructure as Code (IaC) methodology. It often helps with disaster recovery.","Your Weaviate deployment is now accessible on the external IP address of weaviate service, e.g. a5dc***8.eu-central-1.elb.amazonaws.com"]}]]